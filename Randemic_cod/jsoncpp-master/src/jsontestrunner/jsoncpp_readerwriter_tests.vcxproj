<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="16.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{6181357B-E371-38C3-8D6D-F58E3DBD7B01}</ProjectGuid>
    <WindowsTargetPlatformVersion>10.0.19041.0</WindowsTargetPlatformVersion>
    <Keyword>Win32Proj</Keyword>
    <Platform>x64</Platform>
    <ProjectName>jsoncpp_readerwriter_tests</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Midl>
      <AdditionalIncludeDirectories>D:\HACKERMAN\programing\libraries\jsoncpp-master\jsoncpp-master\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Midl>
      <AdditionalIncludeDirectories>D:\HACKERMAN\programing\libraries\jsoncpp-master\jsoncpp-master\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <Midl>
      <AdditionalIncludeDirectories>D:\HACKERMAN\programing\libraries\jsoncpp-master\jsoncpp-master\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <Midl>
      <AdditionalIncludeDirectories>D:\HACKERMAN\programing\libraries\jsoncpp-master\jsoncpp-master\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="D:\HACKERMAN\programing\libraries\jsoncpp-master\CMakeFiles\26b93bc5bfbc1d8903d82244310999a5\jsoncpp_readerwriter_tests.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.8_3.8.2288.0_x64__qbz5n2kfra8p0\python3.8.exe" -B D:/HACKERMAN/programing/libraries/jsoncpp-master/jsoncpp-master/src/jsontestrunner/../../test/runjsontests.py D:/HACKERMAN/programing/libraries/jsoncpp-master/bin/Debug/jsontestrunner_exe.exe D:/HACKERMAN/programing/libraries/jsoncpp-master/jsoncpp-master/src/jsontestrunner/../../test/data
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\HACKERMAN\programing\libraries\jsoncpp-master\bin\Debug\jsontestrunner_exe.exe;D:\HACKERMAN\programing\libraries\jsoncpp-master\bin\Debug\jsoncpp_test.exe;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\HACKERMAN\programing\libraries\jsoncpp-master\src\jsontestrunner\CMakeFiles\jsoncpp_readerwriter_tests</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</VerifyInputsAndOutputsExist>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.8_3.8.2288.0_x64__qbz5n2kfra8p0\python3.8.exe" -B D:/HACKERMAN/programing/libraries/jsoncpp-master/jsoncpp-master/src/jsontestrunner/../../test/runjsontests.py D:/HACKERMAN/programing/libraries/jsoncpp-master/bin/Release/jsontestrunner_exe.exe D:/HACKERMAN/programing/libraries/jsoncpp-master/jsoncpp-master/src/jsontestrunner/../../test/data
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\HACKERMAN\programing\libraries\jsoncpp-master\bin\Release\jsontestrunner_exe.exe;D:\HACKERMAN\programing\libraries\jsoncpp-master\bin\Release\jsoncpp_test.exe;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\HACKERMAN\programing\libraries\jsoncpp-master\src\jsontestrunner\CMakeFiles\jsoncpp_readerwriter_tests</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</VerifyInputsAndOutputsExist>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.8_3.8.2288.0_x64__qbz5n2kfra8p0\python3.8.exe" -B D:/HACKERMAN/programing/libraries/jsoncpp-master/jsoncpp-master/src/jsontestrunner/../../test/runjsontests.py D:/HACKERMAN/programing/libraries/jsoncpp-master/bin/MinSizeRel/jsontestrunner_exe.exe D:/HACKERMAN/programing/libraries/jsoncpp-master/jsoncpp-master/src/jsontestrunner/../../test/data
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\HACKERMAN\programing\libraries\jsoncpp-master\bin\MinSizeRel\jsontestrunner_exe.exe;D:\HACKERMAN\programing\libraries\jsoncpp-master\bin\MinSizeRel\jsoncpp_test.exe;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\HACKERMAN\programing\libraries\jsoncpp-master\src\jsontestrunner\CMakeFiles\jsoncpp_readerwriter_tests</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</VerifyInputsAndOutputsExist>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.8_3.8.2288.0_x64__qbz5n2kfra8p0\python3.8.exe" -B D:/HACKERMAN/programing/libraries/jsoncpp-master/jsoncpp-master/src/jsontestrunner/../../test/runjsontests.py D:/HACKERMAN/programing/libraries/jsoncpp-master/bin/RelWithDebInfo/jsontestrunner_exe.exe D:/HACKERMAN/programing/libraries/jsoncpp-master/jsoncpp-master/src/jsontestrunner/../../test/data
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\HACKERMAN\programing\libraries\jsoncpp-master\bin\RelWithDebInfo\jsontestrunner_exe.exe;D:\HACKERMAN\programing\libraries\jsoncpp-master\bin\RelWithDebInfo\jsoncpp_test.exe;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\HACKERMAN\programing\libraries\jsoncpp-master\src\jsontestrunner\CMakeFiles\jsoncpp_readerwriter_tests</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</VerifyInputsAndOutputsExist>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\HACKERMAN\programing\libraries\jsoncpp-master\jsoncpp-master\src\jsontestrunner\CMakeLists.txt">
      <StdOutEncoding>UTF-8</StdOutEncoding>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule D:/HACKERMAN/programing/libraries/jsoncpp-master/jsoncpp-master/src/jsontestrunner/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
D:\Program_files\bin\cmake.exe -SD:/HACKERMAN/programing/libraries/jsoncpp-master/jsoncpp-master -BD:/HACKERMAN/programing/libraries/jsoncpp-master --check-stamp-file D:/HACKERMAN/programing/libraries/jsoncpp-master/src/jsontestrunner/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\Program_files\share\cmake-3.20\Modules\FindPackageHandleStandardArgs.cmake;D:\Program_files\share\cmake-3.20\Modules\FindPackageMessage.cmake;D:\Program_files\share\cmake-3.20\Modules\FindPython\Support.cmake;D:\Program_files\share\cmake-3.20\Modules\FindPython3.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\HACKERMAN\programing\libraries\jsoncpp-master\src\jsontestrunner\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule D:/HACKERMAN/programing/libraries/jsoncpp-master/jsoncpp-master/src/jsontestrunner/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
D:\Program_files\bin\cmake.exe -SD:/HACKERMAN/programing/libraries/jsoncpp-master/jsoncpp-master -BD:/HACKERMAN/programing/libraries/jsoncpp-master --check-stamp-file D:/HACKERMAN/programing/libraries/jsoncpp-master/src/jsontestrunner/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\Program_files\share\cmake-3.20\Modules\FindPackageHandleStandardArgs.cmake;D:\Program_files\share\cmake-3.20\Modules\FindPackageMessage.cmake;D:\Program_files\share\cmake-3.20\Modules\FindPython\Support.cmake;D:\Program_files\share\cmake-3.20\Modules\FindPython3.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\HACKERMAN\programing\libraries\jsoncpp-master\src\jsontestrunner\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule D:/HACKERMAN/programing/libraries/jsoncpp-master/jsoncpp-master/src/jsontestrunner/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
D:\Program_files\bin\cmake.exe -SD:/HACKERMAN/programing/libraries/jsoncpp-master/jsoncpp-master -BD:/HACKERMAN/programing/libraries/jsoncpp-master --check-stamp-file D:/HACKERMAN/programing/libraries/jsoncpp-master/src/jsontestrunner/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\Program_files\share\cmake-3.20\Modules\FindPackageHandleStandardArgs.cmake;D:\Program_files\share\cmake-3.20\Modules\FindPackageMessage.cmake;D:\Program_files\share\cmake-3.20\Modules\FindPython\Support.cmake;D:\Program_files\share\cmake-3.20\Modules\FindPython3.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\HACKERMAN\programing\libraries\jsoncpp-master\src\jsontestrunner\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule D:/HACKERMAN/programing/libraries/jsoncpp-master/jsoncpp-master/src/jsontestrunner/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
D:\Program_files\bin\cmake.exe -SD:/HACKERMAN/programing/libraries/jsoncpp-master/jsoncpp-master -BD:/HACKERMAN/programing/libraries/jsoncpp-master --check-stamp-file D:/HACKERMAN/programing/libraries/jsoncpp-master/src/jsontestrunner/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\Program_files\share\cmake-3.20\Modules\FindPackageHandleStandardArgs.cmake;D:\Program_files\share\cmake-3.20\Modules\FindPackageMessage.cmake;D:\Program_files\share\cmake-3.20\Modules\FindPython\Support.cmake;D:\Program_files\share\cmake-3.20\Modules\FindPython3.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\HACKERMAN\programing\libraries\jsoncpp-master\src\jsontestrunner\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <None Include="D:\HACKERMAN\programing\libraries\jsoncpp-master\src\jsontestrunner\CMakeFiles\jsoncpp_readerwriter_tests">
    </None>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="D:\HACKERMAN\programing\libraries\jsoncpp-master\ZERO_CHECK.vcxproj">
      <Project>{CA20923D-B049-39D6-AABB-3915B2CE6331}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
    <ProjectReference Include="D:\HACKERMAN\programing\libraries\jsoncpp-master\src\test_lib_json\jsoncpp_test.vcxproj">
      <Project>{C4F9B408-1D75-344A-BF7B-47A9E7637ED9}</Project>
      <Name>jsoncpp_test</Name>
    </ProjectReference>
    <ProjectReference Include="D:\HACKERMAN\programing\libraries\jsoncpp-master\src\jsontestrunner\jsontestrunner_exe.vcxproj">
      <Project>{1707009B-ABEA-3073-B2B4-AC8BE1916359}</Project>
      <Name>jsontestrunner_exe</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>